name: Deploy Storage and Keyvault Resources

on:
   push:
    branches:
    - "main"
   workflow_dispatch:
        inputs:
         
          skip_code_quality:
            type: boolean
            description: "Skip Code Quality steps for Quick Deployment Validation"
            required: true
            default: false
          environment:
            description: "Select the environment to validate"
            required: true
            default: innovation
            type: choice
            options:
              - innovation
# permissions:
#   id-token: write
#   contents: read
#   statuses: write
permissions:
  contents: write
  pull-requests: write
  statuses: write
  issues: write

env:
  #MODULE_TEST_FILE_PATH: "tests/e2e/defaults/main.test.bicep"   
  MODULE_ROOT_FOLDER: "pattern/res"
  CURRENT_BRANCH_NAME: "users/garamac/feature-superlinter"
 
  AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
  BICEP_FILE: "pattern/keyvault/main.bicep"
  SUB_NAME: "pxs-cn-is-azplg0024-sub"

jobs:
  Superlinter:
    uses: ./.github/workflows/superlinter.yaml
    with:
      branches: main
      validate_all_codebase: false
      disable_errors: true
      
        #   - name: Run Pester Test
        #     id: Pester
        #     if: ${{ fromJson(needs.job_define_inputs.outputs.moduleData).skip_pesterTestStep != 'true' }}
        #     uses: ./.github/actions/templates/avm-validateModulePester
        #     with:
        #       modulePath: ${{ fromJson(needs.job_define_inputs.outputs.moduleData).modulePath }}
    
        #   - name: "Run PSRule validation with Azure.Default Baseline"
        #     uses: ./.github/actions/templates/avm-validateModulePSRule
        #     with:
        #       templateFilePath: ${{ fromJson(needs.job_define_inputs.outputs.moduleData).templateRelativeFilePath }}
        #       psrulePath: "/utilities/pipelines/staticValidation/psrule"
        #       psruleBaseline: "Azure.Default"

#   DeployManagementResources-playground:
#     name: Deploy Resources into 'pxs-cn-is-azplg0024-sub' Subscription
#     runs-on: ubuntu-latest
#     environment: "innovation"
#     steps:
#       - name: Checkout the feature branch
#         uses: actions/checkout@v4
#         with:
#           ref: ${{ github.ref_name }}
      
    #   - name: Run SuperLinter Code
        
    #     uses: ./.github/actions/templates/lint
    #     with:
    #         branches: "users/garamac/containerbicepcode"
    #         validate_all_codebase: true
    #         disable_errors: true


    #   - name: Deploy Keyvault 
    #     id: deploy_playground_bicep
    #     uses: ./.github/actions/templates/kv-bicep-deployment
    #     with:
    #       gitHubEnvironment: "innovation"
    #       azureLocation: ${{ vars.AZURE_LOCATION }}
    #       bicepFile: ${{ env.BICEP_FILE }}
    #       bicepParameterFile: "pattern/keyvault/${{ inputs.environment }}.main.bicepparam"
    #       description: "monitoring-infrastructure"
    #       azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
    #       azure_tenant_id: ${{ secrets.AZURE_TENANT_ID}}         
    #       azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID}}

    #   - name: Deploy Storage Account
    #     id: deploy_playground_storage_bicep
    #     if: ${{ inputs.deploy_storage == 'yes' }}
    #     uses: ./.github/actions/templates/storage-bicep-deployment
    #     with:
    #         gitHubEnvironment: "innovation"
    #         azureLocation: ${{ vars.AZURE_LOCATION }}
    #         bicepFile: ${{ env.BICEP_FILE }}
    #         bicepParameterFile: "pattern/storage/${{ inputs.environment }}.main.bicepparam"
    #         description: "monitoring-infrastructure"
    #         azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
    #         azure_tenant_id: ${{ secrets.AZURE_TENANT_ID}}         
    #         azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID}}
  